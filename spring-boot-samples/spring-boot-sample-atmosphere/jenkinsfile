node {
 //  def mvnHome
   stage('Preparation') { // for display purposes
      // Get some code from a GitHub repository
      //git 'https://github.com/devopss1/jenkins.git'
      git url:'https://github.com/devopss1/jenkins.git', branch: 'master'
      // Get the Maven tool.
      // ** NOTE: This 'M3' Maven tool must be configured
      // **       in the global configuration.           
      mvnHome = tool 'M2_HOME'
   }
   stage('Build') {
      // Run the maven build
      if (isUnix()) {
      sh "mvn -Dmaven.test.failure.ignore clean package -f ${WORKSPACE}/spring-boot-samples/spring-boot-sample-atmosphere/pom.xml"
      } else {
         bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)
      }
   }
   stage('Results') {
     // junit '${WORKSPACE}/spring-boot-samples/spring-boot-sample-atmosphere/target/surefire-reports/*.xml'
    //   archive '"${WORKSPACE}"/spring-boot-samples/spring-boot-sample-atmosphere/target/*.jar'
    //    sh 'chmod 755 "${WORKSPACE}"/spring-boot-samples/spring-boot-sample-atmosphere/target/surefire-reports/*'
    junit 'spring-boot-samples/spring-boot-sample-atmosphere/target/surefire-reports/*.xml'
       
   }

   stage('SonarQube analysis') { 
        withSonarQubeEnv('sonarqube') { 
          sh 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.3.0.603:sonar ' + 
          '-f spring-boot-samples/spring-boot-sample-atmosphere/pom.xml ' +
          '-Dsonar.projectKey=com.huettermann:all:master ' +
          '-Dsonar.login=admin ' +
          '-Dsonar.password=admin ' +
          '-Dsonar.language=java ' +
          '-Dsonar.sources=. ' +
       }
   }   

} 
